<Activity mc:Ignorable="sap sap2010" x:Class="get_ColumnID_By_Name" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sa="clr-namespace:Smartsheet.Api;assembly=smartsheet-csharp-sdk" xmlns:sam="clr-namespace:Smartsheet.Api.Models;assembly=smartsheet-csharp-sdk" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ubac="clr-namespace:UiPath.BAF.Activities.ContextModel;assembly=UiPath.Smartsheet.Activities" xmlns:ubme="clr-namespace:UiPath.BAF.Models.Entity;assembly=UiPath.Smartsheet" xmlns:ubt="clr-namespace:UiPath.BAF.Telemetry;assembly=UiPath.Smartsheet" xmlns:ucm="clr-namespace:UiPath.CodeGen.Model;assembly=UiPath.Smartsheet" xmlns:ucmc="clr-namespace:UiPath.CodeGen.Models.Connection;assembly=UiPath.Smartsheet" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usa="clr-namespace:UiPath.Smartsheet.Activities;assembly=UiPath.Smartsheet.Activities" xmlns:usas="clr-namespace:UiPath.Smartsheet.Activities.Sheets;assembly=UiPath.Smartsheet.Activities" xmlns:usm="clr-namespace:UiPath.Smartsheet.Models;assembly=UiPath.Smartsheet" xmlns:uss="clr-namespace:UiPath.Smartsheet.Services;assembly=UiPath.Smartsheet" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_SheetID" Type="InArgument(x:String)" />
    <x:Property Name="in_API_Token" Type="InArgument(x:String)" />
    <x:Property Name="Arr_ColumnName" Type="InArgument(s:String[])" />
    <x:Property Name="out_ColumnDict" Type="OutArgument(scg:Dictionary(x:Int64, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>922,1018</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>get_ColumnID_By_Name_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="92">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.BAF.Models.Entity</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.BAF.Properties</x:String>
      <x:String>UiPath.BAF.Enums</x:String>
      <x:String>UiPath.BAF.ServiceInterfaces</x:String>
      <x:String>UiPath.BAF.Models.CrudOperation</x:String>
      <x:String>UiPath.BAF.Telemetry</x:String>
      <x:String>UiPath.BAF.Models.Response</x:String>
      <x:String>UiPath.Smartsheet.Activities.Sheets</x:String>
      <x:String>UiPath.Smartsheet.Activities</x:String>
      <x:String>UiPath.CodeGen.Activities</x:String>
      <x:String>UiPath.BAF.Activities</x:String>
      <x:String>UiPath.Swagger.Models</x:String>
      <x:String>UiPath.CodeGen.Models.Connection</x:String>
      <x:String>UiPath.Smartsheet.Models</x:String>
      <x:String>UiPath.BAF.Models.Connection</x:String>
      <x:String>UiPath.BAF.Models.Connection.APIConnection</x:String>
      <x:String>UiPath.BAF.Activities.ContextModel</x:String>
      <x:String>UiPath.BAF.Models</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Smartsheet.Api.Models</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="31">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Smartsheet</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Smartsheet.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>smartsheet-csharp-sdk</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Input: Sheet_ID, API_Token, Array of Column Names&#xA;Output: Dictionary with Column Ids &amp; Column Names" DisplayName="get_ColumnID_By_Name" sap:VirtualizedContainerService.HintSize="476,953" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sam:Sheet" Name="SheetObject" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="434,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="346,244" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Test Sequence" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[Arr_ColumnName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[{"OU REQUESTOR (PREPARER)", "On Hold"}]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <Sequence DisplayName="Initialization Sequence" sap:VirtualizedContainerService.HintSize="434,66" sap2010:WorkflowViewState.IdRef="Sequence_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:Dictionary(x:Int64, x:String)">[out_ColumnDict]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:Dictionary(x:Int64, x:String)">[New Dictionary(Of Int64, String)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Input Validation" sap:VirtualizedContainerService.HintSize="434,66" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="451,971" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
        <ui:IfElseIf.ConditionBlocks>
          <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
            <ui:IfElseIfBlock BlockType="If" Condition="[String.IsNullOrEmpty(in_API_Token)]">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;API Token is required. Please do make sure it's being passed to the argument.&quot;]" />
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
            <ui:IfElseIfBlock BlockType="ElseIf" Condition="[String.IsNullOrEmpty(in_SheetID)]">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Warn" Message="[&quot;Sheet ID is required. Please do make sure it's being passed to the argument.&quot;]" />
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
            <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Arr_ColumnName.Count = 0]">
              <ui:IfElseIfBlock.Then>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Warn" Message="[&quot;Array of column Names is required. Please do make sure it's being passed to the argument.&quot;]" />
                </Sequence>
              </ui:IfElseIfBlock.Then>
            </ui:IfElseIfBlock>
          </sc:BindingList>
        </ui:IfElseIf.ConditionBlocks>
      </ui:IfElseIf>
    </Sequence>
    <usa:SmartsheetScopeActivity Connection="{x:Null}" DesignConnectionRequest="{x:Null}" ExistingConnection="{x:Null}" SelectedDesignAuthType="{x:Null}" SwaggerClient="{x:Null}" DesignConnectionEnabled="False" DisplayName="Smartsheet Application Scope" ExistingConnectionType="usm:SmartsheetConnection" sap:VirtualizedContainerService.HintSize="434,385" sap2010:WorkflowViewState.IdRef="SmartsheetScopeActivity_1" RefreshCacheEnabled="False" SelectedAuthType="API Token" TelemetryEnabled="False" ThrowExceptionOnError="False">
      <usa:SmartsheetScopeActivity.Body>
        <ActivityAction x:TypeArguments="ubac:ScopeActivityContext">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ubac:ScopeActivityContext" Name="ScopeActivityContext" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,244" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <usas:GetSheet Category="{x:Null}" FieldsSelectionPageProperties="{x:Null}" ScopeActivityType="{x:Null}" Section="{x:Null}" Status="{x:Null}" BusinessEntityName="GetSheet" ConfiguredBusinessEntity="GetSheet" CrudOperation="Function" DesignConnectionEnabled="False" DisplayName="Get Sheet" HideCascadingDropdown="False" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="GetSheet_1">
              <usas:GetSheet.BusinessEntity>
                <ubme:BusinessEntity AuthFields="{x:Null}" Connection="{x:Null}" Id="{x:Null}" Name="GetSheet">
                  <ubme:BusinessEntity.AllFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                  </ubme:BusinessEntity.AllFields>
                  <ubme:BusinessEntity.EntityMetadata>
                    <ubme:EntityMetadata Description="{x:Null}" Metadata="{x:Reference __ReferenceID0}" EligibleOperations="-1" IsCustomEntity="False" Name="GetSheet" />
                  </ubme:BusinessEntity.EntityMetadata>
                  <ubme:BusinessEntity.Metadata>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID0">
                      <x:Type Type="sa:SmartsheetClient" x:Key="Client" />
                    </scg:Dictionary>
                  </ubme:BusinessEntity.Metadata>
                  <ubme:BusinessEntity.SelectedFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="10">
                      <ucm:CodeGenEntityField x:TypeArguments="x:Int64" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID1" ArgumentDirection="In" ArgumentType="x:Int64" DataType="Int64" Description="the Id of the sheet" DisplayName="SheetId" FieldName="SheetId" FormDataType="ExpressionTextBox" InArgumentValue="[Convert.ToInt64(in_SheetID)]" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="True" ShouldFilterOnChange="False">
                        <ucm:CodeGenEntityField.ArgumentValue>
                          <InArgument x:TypeArguments="x:Int64">[Convert.ToInt64(in_SheetID)]</InArgument>
                        </ucm:CodeGenEntityField.ArgumentValue>
                      </ucm:CodeGenEntityField>
                      <ucm:CodeGenEntityField x:TypeArguments="s:Int64[]" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID2" ArgumentDirection="In" ArgumentType="s:Int64[]" DataType="Int64[]" Description="used to specify the optional objects to include." DisplayName="ColumnIds" FieldName="ColumnIds" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                      <ucm:CodeGenEntityField x:TypeArguments="sam:SheetLevelInclusion[]" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID3" ArgumentDirection="In" ArgumentType="sam:SheetLevelInclusion[]" DataType="SheetLevelInclusion[]" Description="used to specify the optional objects to include." DisplayName="Includes" FieldName="Includes" FormDataType="MultiSelect" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                      <ucm:CodeGenEntityField x:TypeArguments="sam:SheetLevelExclusion[]" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID4" ArgumentDirection="In" ArgumentType="sam:SheetLevelExclusion[]" DataType="SheetLevelExclusion[]" Description="used to specify the optional objects to include." DisplayName="Excludes" FieldName="Excludes" FormDataType="MultiSelect" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                      <ucm:CodeGenEntityField x:TypeArguments="s:Int64[]" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID5" ArgumentDirection="In" ArgumentType="s:Int64[]" DataType="Int64[]" Description="used to specify the optional objects to include." DisplayName="RowIds" FieldName="RowIds" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                      <ucm:CodeGenEntityField x:TypeArguments="s:Int32[]" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID6" ArgumentDirection="In" ArgumentType="s:Int32[]" DataType="Int32[]" Description="RowNumbers" DisplayName="RowNumbers" FieldName="RowNumbers" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                      <ucm:CodeGenEntityField x:TypeArguments="x:String" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID7" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="Filter to return only rows that have been modified since the date/time" DisplayName="Rows Modified Since" FieldName="Rows Modified Since" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                      <ucm:CodeGenEntityField x:TypeArguments="x:Int32" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID8" ArgumentDirection="In" ArgumentType="x:Int32" DataType="Int32" Description="used to specify the optional objects to include." DisplayName="PageSize" FieldName="PageSize" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                      <ucm:CodeGenEntityField x:TypeArguments="x:Int32" ArgumentValue="{x:Null}" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" OutArgumentValue="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID9" ArgumentDirection="In" ArgumentType="x:Int32" DataType="Int32" Description="used to specify the optional objects to include." DisplayName="Page" FieldName="Page" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False" />
                      <ucm:CodeGenEntityField x:TypeArguments="sam:Sheet" ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" InArgumentValue="{x:Null}" InOutArgumentValue="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID10" ArgumentDirection="Out" ArgumentType="sam:Sheet" DataType="Sheet" Description="The sheet object" DisplayName="Sheet" FieldName="Sheet" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" OutArgumentValue="[SheetObject]" ShouldFilterOnChange="False">
                        <ucm:CodeGenEntityField.ArgumentValue>
                          <OutArgument x:TypeArguments="sam:Sheet">[SheetObject]</OutArgument>
                        </ucm:CodeGenEntityField.ArgumentValue>
                      </ucm:CodeGenEntityField>
                    </scg:List>
                  </ubme:BusinessEntity.SelectedFields>
                  <ubme:BusinessEntity.TelemetryProperties>
                    <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                  </ubme:BusinessEntity.TelemetryProperties>
                </ubme:BusinessEntity>
              </usas:GetSheet.BusinessEntity>
              <usas:GetSheet.PopulatedAPIParameters>
                <scg:Dictionary x:TypeArguments="x:String, ubme:EntityField" />
              </usas:GetSheet.PopulatedAPIParameters>
              <usas:GetSheet.SelectedFields>
                <scg:List x:TypeArguments="ubme:EntityField" Capacity="10">
                  <x:Reference>__ReferenceID1</x:Reference>
                  <x:Reference>__ReferenceID2</x:Reference>
                  <x:Reference>__ReferenceID3</x:Reference>
                  <x:Reference>__ReferenceID4</x:Reference>
                  <x:Reference>__ReferenceID5</x:Reference>
                  <x:Reference>__ReferenceID6</x:Reference>
                  <x:Reference>__ReferenceID7</x:Reference>
                  <x:Reference>__ReferenceID8</x:Reference>
                  <x:Reference>__ReferenceID9</x:Reference>
                  <x:Reference>__ReferenceID10</x:Reference>
                </scg:List>
              </usas:GetSheet.SelectedFields>
              <usas:GetSheet.ServiceFactory>
                <uss:SmartsheetServiceFactory />
              </usas:GetSheet.ServiceFactory>
              <usas:GetSheet.TelemetryProperties>
                <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
              </usas:GetSheet.TelemetryProperties>
            </usas:GetSheet>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Arr_ColumnName]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="column" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="Str_ColumnId" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Str_ColumnId]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[SheetObject.Columns.Where(function (x) x.Title.ToString = column).Select(function (x) x.Id.ToString)(0).toString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[out_ColumnDict(Convert.ToInt64(Str_ColumnId))]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[column]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </usa:SmartsheetScopeActivity.Body>
      <usa:SmartsheetScopeActivity.ConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="4">
          <ucmc:ConnectionParam x:TypeArguments="x:String" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" Description="The API token to use" GenericArgumentValue="[in_API_Token]" Mandatory="True" Name="API Access Token">
            <ucmc:ConnectionParam.ArgumentValue>
              <InArgument x:TypeArguments="x:String">[in_API_Token]</InArgument>
            </ucmc:ConnectionParam.ArgumentValue>
          </ucmc:ConnectionParam>
        </scg:List>
      </usa:SmartsheetScopeActivity.ConnectionParameters>
      <usa:SmartsheetScopeActivity.DesignConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="0" />
      </usa:SmartsheetScopeActivity.DesignConnectionParameters>
      <usa:SmartsheetScopeActivity.ServiceFactory>
        <uss:SmartsheetServiceFactory />
      </usa:SmartsheetScopeActivity.ServiceFactory>
      <usa:SmartsheetScopeActivity.SupportedAuthTypes>
        <scg:List x:TypeArguments="x:String" Capacity="4">
          <x:String>Existing Connection</x:String>
          <x:String>OAuth</x:String>
          <x:String>API Token</x:String>
          <x:String xml:space="preserve">OAuth Passthrough </x:String>
        </scg:List>
      </usa:SmartsheetScopeActivity.SupportedAuthTypes>
      <usa:SmartsheetScopeActivity.TelemetryProperties>
        <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
      </usa:SmartsheetScopeActivity.TelemetryProperties>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </usa:SmartsheetScopeActivity>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Number of records returned: &quot; + SheetObject.Rows.Count.ToString]" />
  </Sequence>
</Activity>
